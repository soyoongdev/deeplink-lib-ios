#if 0
#elif defined(__arm64__) && __arm64__
// Generated by Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
#ifndef DYNAMICLINKFRAMEWORK_SWIFT_H
#define DYNAMICLINKFRAMEWORK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="DynamicLinkFramework",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
@class NSData;

SWIFT_CLASS("_TtC20DynamicLinkFramework11DLAPIClient")
@interface DLAPIClient : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DLAPIClient * _Nonnull shared;)
+ (DLAPIClient * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)requestWithEndpoint:(NSString * _Nonnull)endpoint method:(NSString * _Nonnull)method parameters:(NSDictionary<NSString *, id> * _Nullable)parameters headers:(NSDictionary<NSString *, NSString *> * _Nullable)headers completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (void)getWithEndpoint:(NSString * _Nonnull)endpoint parameters:(NSDictionary<NSString *, id> * _Nullable)parameters headers:(NSDictionary<NSString *, NSString *> * _Nullable)headers completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (void)postWithEndpoint:(NSString * _Nonnull)endpoint parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters headers:(NSDictionary<NSString *, NSString *> * _Nullable)headers completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (void)putWithEndpoint:(NSString * _Nonnull)endpoint parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters headers:(NSDictionary<NSString *, NSString *> * _Nullable)headers completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (void)deleteWithEndpoint:(NSString * _Nonnull)endpoint parameters:(NSDictionary<NSString *, id> * _Nullable)parameters headers:(NSDictionary<NSString *, NSString *> * _Nullable)headers completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
@end


SWIFT_CLASS("_TtC20DynamicLinkFramework8DLConfig")
@interface DLConfig : NSObject
/// Danh sách host được phép xử lý
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<NSString *> * _Nonnull allowedHosts;)
+ (NSArray<NSString *> * _Nonnull)allowedHosts SWIFT_WARN_UNUSED_RESULT;
+ (void)setAllowedHosts:(NSArray<NSString *> * _Nonnull)value;
/// Scheme mặc định cho ứng dụng
/// Src: Lấy Scheme array từ CFBundleURLSchemes trong file Info.plist
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<NSString *> * _Nonnull appSchemes;)
+ (NSArray<NSString *> * _Nonnull)appSchemes SWIFT_WARN_UNUSED_RESULT;
+ (void)setAppSchemes:(NSArray<NSString *> * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURL;

/// Class đại diện cho một Dynamic Link được xử lý từ Universal Link hoặc Custom Scheme URL
SWIFT_CLASS("_TtC20DynamicLinkFramework13DLDynamicLink")
@interface DLDynamicLink : NSObject
/// URL gốc của Dynamic Link
@property (nonatomic, readonly, copy) NSURL * _Nonnull originalURL;
/// Host của URL (nếu có)
@property (nonatomic, readonly, copy) NSString * _Nullable host;
/// Path của URL
@property (nonatomic, readonly, copy) NSString * _Nonnull path;
/// Các tham số truy vấn của Dynamic Link (dùng NSDictionary để tương thích)
@property (nonatomic, readonly, strong) NSDictionary * _Nonnull parameters;
/// Hàm khởi tạo dùng Objective-C (không dùng <code>init?</code>)
- (nonnull instancetype)initWithUrl:(NSURL * _Nonnull)url OBJC_DESIGNATED_INITIALIZER;
/// Hàm khởi tạo từ các thành phần riêng biệt
- (nonnull instancetype)initWithUrl:(NSURL * _Nonnull)url path:(NSString * _Nonnull)path host:(NSString * _Nullable)host parameters:(NSDictionary * _Nonnull)parameters OBJC_DESIGNATED_INITIALIZER;
/// Trả về mô tả của đối tượng
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSURLResponse;

SWIFT_CLASS("_TtC20DynamicLinkFramework23DLDynamicLinkNetworking")
@interface DLDynamicLinkNetworking : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DLDynamicLinkNetworking * _Nonnull shared;)
+ (DLDynamicLinkNetworking * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (NSError * _Nullable)extractErrorForShortLinkWithUrl:(NSURL * _Nonnull)url data:(NSData * _Nullable)data response:(NSURLResponse * _Nullable)response error:(NSError * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Hàm xử lý shortlink (phân giải shortlink)
- (void)resolveShortLinkWithUrl:(NSURL * _Nullable)url completion:(void (^ _Nonnull)(NSURL * _Nullable, NSError * _Nullable))completion;
- (void)createShortURLFakeResponseFrom:(NSDictionary<NSString *, id> * _Nonnull)parameters completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (void)createShortURLFrom:(NSDictionary<NSString *, id> * _Nonnull)parameters completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Hàm cập nhật thống kê số lần mở link (first open or reopen deeplink statistics)
- (void)updateDeepLinkAnalyticsWithUrl:(NSURL * _Nonnull)url count:(NSInteger)count firstOpen:(BOOL)firstOpen reopen:(BOOL)reopen completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20DynamicLinkFramework14DLDynamicLinks")
@interface DLDynamicLinks : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DLDynamicLinks * _Nonnull shared;)
+ (DLDynamicLinks * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)configureDynamicLinks;
- (void)createShortURLFrom:(NSDictionary<NSString *, id> * _Nonnull)parameters completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (DLDynamicLink * _Nullable)dynamicLinkFromCustomSchemeURL:(NSURL * _Nullable)url SWIFT_WARN_UNUSED_RESULT;
- (BOOL)handleUniversalLink:(NSURL * _Nullable)url completion:(void (^ _Nonnull)(DLDynamicLink * _Nullable, NSError * _Nullable))completion SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC20DynamicLinkFramework10DLKeyValue")
@interface DLKeyValue : NSObject
@property (nonatomic, copy) NSString * _Nullable key;
@property (nonatomic, copy) NSString * _Nullable value;
+ (DLKeyValue * _Nonnull)key:(NSString * _Nonnull)key value:(NSString * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum LogLevel : NSInteger;

/// DLLogger - Hỗ trợ log theo nhiều cấp độ, lưu log vào file nếu cần
SWIFT_CLASS("_TtC20DynamicLinkFramework8DLLogger")
@interface DLLogger : NSObject
/// Ghi log với đầy đủ thông tin
+ (void)log:(NSString * _Nonnull)message level:(enum LogLevel)level;
/// Xóa file log
+ (void)clearLogFile;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Cấu hình Logger
SWIFT_CLASS("_TtC20DynamicLinkFramework14DLLoggerConfig")
@interface DLLoggerConfig : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL isLoggingEnabled;)
+ (BOOL)isLoggingEnabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setIsLoggingEnabled:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL shouldLogToFile;)
+ (BOOL)shouldLogToFile SWIFT_WARN_UNUSED_RESULT;
+ (void)setShouldLogToFile:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL shouldUseOSLog;)
+ (BOOL)shouldUseOSLog SWIFT_WARN_UNUSED_RESULT;
+ (void)setShouldUseOSLog:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL shouldUseNSLog;)
+ (BOOL)shouldUseNSLog SWIFT_WARN_UNUSED_RESULT;
+ (void)setShouldUseNSLog:(BOOL)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, DLShortURLType, open) {
  DLShortURLTypeUnlimitedUse = 0,
  DLShortURLTypeOneTimeUse = 1,
};


/// A type that reads from and writes to an underlying storage container.
SWIFT_CLASS("_TtC20DynamicLinkFramework19DLUserDefaultHelper")
@interface DLUserDefaultHelper : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DLUserDefaultHelper * _Nonnull shared;)
+ (DLUserDefaultHelper * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// Lưu String vào UserDefaults
- (void)setString:(NSString * _Nonnull)value forKey:(NSString * _Nonnull)key;
/// Lấy String từ UserDefaults
- (NSString * _Nullable)getStringForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Lưu Integer vào UserDefaults
- (void)setInt:(NSInteger)value forKey:(NSString * _Nonnull)key;
/// Lấy Integer từ UserDefaults
- (NSInteger)getIntForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Lưu Bool vào UserDefaults
- (void)setBool:(BOOL)value forKey:(NSString * _Nonnull)key;
/// Lấy Bool từ UserDefaults
- (BOOL)getBoolForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Lưu Dictionary vào UserDefaults
- (void)setDictionary:(NSDictionary * _Nonnull)value forKey:(NSString * _Nonnull)key;
/// Lấy Dictionary từ UserDefaults
- (NSDictionary * _Nullable)getDictionaryForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Xóa giá trị khỏi UserDefaults
- (void)removeForKey:(NSString * _Nonnull)key;
/// Kiểm tra xem một key có tồn tại hay không
- (BOOL)containsKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Xóa tất cả dữ liệu trong UserDefaults
- (void)removeAllKeys;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20DynamicLinkFramework11DLUtilities")
@interface DLUtilities : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DLUtilities * _Nonnull shared;)
+ (DLUtilities * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSSet<NSURL *> * _Nonnull DLCustomDomains;)
+ (NSSet<NSURL *> * _Nonnull)DLCustomDomains SWIFT_WARN_UNUSED_RESULT;
+ (void)setDLCustomDomains:(NSSet<NSURL *> * _Nonnull)value;
- (NSString * _Nonnull)urlQueryStringFromDictionary:(NSDictionary<NSString *, NSString *> * _Nonnull)dictionary SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, NSString *> * _Nonnull)dictionaryFromQuery:(NSString * _Nullable)queryString SWIFT_WARN_UNUSED_RESULT;
/// Hàm này dùng để kiểm tra xem một URL có thuộc một trong các custom domain hợp lệ hay không.
/// Ngoài ra, nó còn kiểm tra xem URL có chứa đường dẫn hợp lệ hoặc tham số query “link” trỏ đến một URL khác.
/// Ví dụ:
/// Hợp lệ: “https://deeplink.algamestudio.com/game?id=2” || “https://sport.algamestudio.com/detail?id=2” || “https://deeplink.algamestudio.com/?link=https://example.com/page”
/// Không hợp lệ: “https://randomsite.com/game?id=2” (Không thuộc danh sách DLCustomDomains) || “https://deeplink.algamestudio.com/invalid” (Không có đường dẫn hợp lệ hoặc query “link”)
/// \param url Deeplink (Vd: https://deeplink.algamestudio.com)
///
///
/// returns:
/// True nếu hợp lệ hoặc false nếu không hợp lệ
- (BOOL)isURLForAllowedCustomDomain:(NSURL * _Nullable)url SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isValidDLWithDomain:(NSURL * _Nullable)url SWIFT_WARN_UNUSED_RESULT;
- (BOOL)canParseUniversalLinkURL:(NSURL * _Nullable)url SWIFT_WARN_UNUSED_RESULT;
- (BOOL)matchesShortLinkFormat:(NSURL * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
- (void)addToAllowListForCustomDomainsArray:(NSArray<NSString *> * _Nonnull)customDomains;
/// Hàm kiểm tra first open hay reopen (điều kiện reopen là khi app được mở lại sau khi đã được đóng hoàn). Lưu key là urlString và số lần mở deeplink vào UserDefaults.
- (void)checkForDeepLinkAfterLaunch:(NSURL * _Nonnull)url;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Các cấp độ log
typedef SWIFT_ENUM(NSInteger, LogLevel, open) {
  LogLevelDebug = 0,
  LogLevelInfo = 1,
  LogLevelWarning = 2,
  LogLevelError = 3,
};


#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#elif defined(__x86_64__) && __x86_64__
// Generated by Apple Swift version 5.10 (swiftlang-5.10.0.13 clang-1500.3.9.4)
#ifndef DYNAMICLINKFRAMEWORK_SWIFT_H
#define DYNAMICLINKFRAMEWORK_SWIFT_H
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wgcc-compat"

#if !defined(__has_include)
# define __has_include(x) 0
#endif
#if !defined(__has_attribute)
# define __has_attribute(x) 0
#endif
#if !defined(__has_feature)
# define __has_feature(x) 0
#endif
#if !defined(__has_warning)
# define __has_warning(x) 0
#endif

#if __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#if defined(__OBJC__)
#include <Foundation/Foundation.h>
#endif
#if defined(__cplusplus)
#include <cstdint>
#include <cstddef>
#include <cstdbool>
#include <cstring>
#include <stdlib.h>
#include <new>
#include <type_traits>
#else
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>
#include <string.h>
#endif
#if defined(__cplusplus)
#if defined(__arm64e__) && __has_include(<ptrauth.h>)
# include <ptrauth.h>
#else
#pragma clang diagnostic push
#pragma clang diagnostic ignored "-Wreserved-macro-identifier"
# ifndef __ptrauth_swift_value_witness_function_pointer
#  define __ptrauth_swift_value_witness_function_pointer(x)
# endif
# ifndef __ptrauth_swift_class_method_pointer
#  define __ptrauth_swift_class_method_pointer(x)
# endif
#pragma clang diagnostic pop
#endif
#endif

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus)
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
typedef unsigned int swift_uint2  __attribute__((__ext_vector_type__(2)));
typedef unsigned int swift_uint3  __attribute__((__ext_vector_type__(3)));
typedef unsigned int swift_uint4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif
#if !defined(SWIFT_CLASS_PROPERTY)
# if __has_feature(objc_class_property)
#  define SWIFT_CLASS_PROPERTY(...) __VA_ARGS__
# else
#  define SWIFT_CLASS_PROPERTY(...) 
# endif
#endif
#if !defined(SWIFT_RUNTIME_NAME)
# if __has_attribute(objc_runtime_name)
#  define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
# else
#  define SWIFT_RUNTIME_NAME(X) 
# endif
#endif
#if !defined(SWIFT_COMPILE_NAME)
# if __has_attribute(swift_name)
#  define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
# else
#  define SWIFT_COMPILE_NAME(X) 
# endif
#endif
#if !defined(SWIFT_METHOD_FAMILY)
# if __has_attribute(objc_method_family)
#  define SWIFT_METHOD_FAMILY(X) __attribute__((objc_method_family(X)))
# else
#  define SWIFT_METHOD_FAMILY(X) 
# endif
#endif
#if !defined(SWIFT_NOESCAPE)
# if __has_attribute(noescape)
#  define SWIFT_NOESCAPE __attribute__((noescape))
# else
#  define SWIFT_NOESCAPE 
# endif
#endif
#if !defined(SWIFT_RELEASES_ARGUMENT)
# if __has_attribute(ns_consumed)
#  define SWIFT_RELEASES_ARGUMENT __attribute__((ns_consumed))
# else
#  define SWIFT_RELEASES_ARGUMENT 
# endif
#endif
#if !defined(SWIFT_WARN_UNUSED_RESULT)
# if __has_attribute(warn_unused_result)
#  define SWIFT_WARN_UNUSED_RESULT __attribute__((warn_unused_result))
# else
#  define SWIFT_WARN_UNUSED_RESULT 
# endif
#endif
#if !defined(SWIFT_NORETURN)
# if __has_attribute(noreturn)
#  define SWIFT_NORETURN __attribute__((noreturn))
# else
#  define SWIFT_NORETURN 
# endif
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA 
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA 
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA 
#endif
#if !defined(SWIFT_CLASS)
# if __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif
#if !defined(SWIFT_RESILIENT_CLASS)
# if __has_attribute(objc_class_stub)
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME) __attribute__((objc_class_stub))
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_class_stub)) SWIFT_CLASS_NAMED(SWIFT_NAME)
# else
#  define SWIFT_RESILIENT_CLASS(SWIFT_NAME) SWIFT_CLASS(SWIFT_NAME)
#  define SWIFT_RESILIENT_CLASS_NAMED(SWIFT_NAME) SWIFT_CLASS_NAMED(SWIFT_NAME)
# endif
#endif
#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif
#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER 
# endif
#endif
#if !defined(SWIFT_ENUM_ATTR)
# if __has_attribute(enum_extensibility)
#  define SWIFT_ENUM_ATTR(_extensibility) __attribute__((enum_extensibility(_extensibility)))
# else
#  define SWIFT_ENUM_ATTR(_extensibility) 
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name, _extensibility) enum _name : _type _name; enum SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# if __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_ATTR(_extensibility) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME, _extensibility) SWIFT_ENUM(_type, _name, _extensibility)
# endif
#endif
#if !defined(SWIFT_UNAVAILABLE)
# define SWIFT_UNAVAILABLE __attribute__((unavailable))
#endif
#if !defined(SWIFT_UNAVAILABLE_MSG)
# define SWIFT_UNAVAILABLE_MSG(msg) __attribute__((unavailable(msg)))
#endif
#if !defined(SWIFT_AVAILABILITY)
# define SWIFT_AVAILABILITY(plat, ...) __attribute__((availability(plat, __VA_ARGS__)))
#endif
#if !defined(SWIFT_WEAK_IMPORT)
# define SWIFT_WEAK_IMPORT __attribute__((weak_import))
#endif
#if !defined(SWIFT_DEPRECATED)
# define SWIFT_DEPRECATED __attribute__((deprecated))
#endif
#if !defined(SWIFT_DEPRECATED_MSG)
# define SWIFT_DEPRECATED_MSG(...) __attribute__((deprecated(__VA_ARGS__)))
#endif
#if !defined(SWIFT_DEPRECATED_OBJC)
# if __has_feature(attribute_diagnose_if_objc)
#  define SWIFT_DEPRECATED_OBJC(Msg) __attribute__((diagnose_if(1, Msg, "warning")))
# else
#  define SWIFT_DEPRECATED_OBJC(Msg) SWIFT_DEPRECATED_MSG(Msg)
# endif
#endif
#if defined(__OBJC__)
#if !defined(IBSegueAction)
# define IBSegueAction 
#endif
#endif
#if !defined(SWIFT_EXTERN)
# if defined(__cplusplus)
#  define SWIFT_EXTERN extern "C"
# else
#  define SWIFT_EXTERN extern
# endif
#endif
#if !defined(SWIFT_CALL)
# define SWIFT_CALL __attribute__((swiftcall))
#endif
#if !defined(SWIFT_INDIRECT_RESULT)
# define SWIFT_INDIRECT_RESULT __attribute__((swift_indirect_result))
#endif
#if !defined(SWIFT_CONTEXT)
# define SWIFT_CONTEXT __attribute__((swift_context))
#endif
#if !defined(SWIFT_ERROR_RESULT)
# define SWIFT_ERROR_RESULT __attribute__((swift_error_result))
#endif
#if defined(__cplusplus)
# define SWIFT_NOEXCEPT noexcept
#else
# define SWIFT_NOEXCEPT 
#endif
#if !defined(SWIFT_C_INLINE_THUNK)
# if __has_attribute(always_inline)
# if __has_attribute(nodebug)
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline)) __attribute__((nodebug))
# else
#  define SWIFT_C_INLINE_THUNK inline __attribute__((always_inline))
# endif
# else
#  define SWIFT_C_INLINE_THUNK inline
# endif
#endif
#if defined(_WIN32)
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL __declspec(dllimport)
#endif
#else
#if !defined(SWIFT_IMPORT_STDLIB_SYMBOL)
# define SWIFT_IMPORT_STDLIB_SYMBOL 
#endif
#endif
#if defined(__OBJC__)
#if __has_feature(objc_modules)
#if __has_warning("-Watimport-in-framework-header")
#pragma clang diagnostic ignored "-Watimport-in-framework-header"
#endif
@import Foundation;
@import ObjectiveC;
#endif

#endif
#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"
#if __has_warning("-Wpragma-clang-attribute")
# pragma clang diagnostic ignored "-Wpragma-clang-attribute"
#endif
#pragma clang diagnostic ignored "-Wunknown-pragmas"
#pragma clang diagnostic ignored "-Wnullability"
#pragma clang diagnostic ignored "-Wdollar-in-identifier-extension"

#if __has_attribute(external_source_symbol)
# pragma push_macro("any")
# undef any
# pragma clang attribute push(__attribute__((external_source_symbol(language="Swift", defined_in="DynamicLinkFramework",generated_declaration))), apply_to=any(function,enum,objc_interface,objc_category,objc_protocol))
# pragma pop_macro("any")
#endif

#if defined(__OBJC__)
@class NSString;
@class NSData;

SWIFT_CLASS("_TtC20DynamicLinkFramework11DLAPIClient")
@interface DLAPIClient : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DLAPIClient * _Nonnull shared;)
+ (DLAPIClient * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)requestWithEndpoint:(NSString * _Nonnull)endpoint method:(NSString * _Nonnull)method parameters:(NSDictionary<NSString *, id> * _Nullable)parameters headers:(NSDictionary<NSString *, NSString *> * _Nullable)headers completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (void)getWithEndpoint:(NSString * _Nonnull)endpoint parameters:(NSDictionary<NSString *, id> * _Nullable)parameters headers:(NSDictionary<NSString *, NSString *> * _Nullable)headers completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (void)postWithEndpoint:(NSString * _Nonnull)endpoint parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters headers:(NSDictionary<NSString *, NSString *> * _Nullable)headers completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (void)putWithEndpoint:(NSString * _Nonnull)endpoint parameters:(NSDictionary<NSString *, id> * _Nonnull)parameters headers:(NSDictionary<NSString *, NSString *> * _Nullable)headers completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (void)deleteWithEndpoint:(NSString * _Nonnull)endpoint parameters:(NSDictionary<NSString *, id> * _Nullable)parameters headers:(NSDictionary<NSString *, NSString *> * _Nullable)headers completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
@end


SWIFT_CLASS("_TtC20DynamicLinkFramework8DLConfig")
@interface DLConfig : NSObject
/// Danh sách host được phép xử lý
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<NSString *> * _Nonnull allowedHosts;)
+ (NSArray<NSString *> * _Nonnull)allowedHosts SWIFT_WARN_UNUSED_RESULT;
+ (void)setAllowedHosts:(NSArray<NSString *> * _Nonnull)value;
/// Scheme mặc định cho ứng dụng
/// Src: Lấy Scheme array từ CFBundleURLSchemes trong file Info.plist
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSArray<NSString *> * _Nonnull appSchemes;)
+ (NSArray<NSString *> * _Nonnull)appSchemes SWIFT_WARN_UNUSED_RESULT;
+ (void)setAppSchemes:(NSArray<NSString *> * _Nonnull)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSURL;

/// Class đại diện cho một Dynamic Link được xử lý từ Universal Link hoặc Custom Scheme URL
SWIFT_CLASS("_TtC20DynamicLinkFramework13DLDynamicLink")
@interface DLDynamicLink : NSObject
/// URL gốc của Dynamic Link
@property (nonatomic, readonly, copy) NSURL * _Nonnull originalURL;
/// Host của URL (nếu có)
@property (nonatomic, readonly, copy) NSString * _Nullable host;
/// Path của URL
@property (nonatomic, readonly, copy) NSString * _Nonnull path;
/// Các tham số truy vấn của Dynamic Link (dùng NSDictionary để tương thích)
@property (nonatomic, readonly, strong) NSDictionary * _Nonnull parameters;
/// Hàm khởi tạo dùng Objective-C (không dùng <code>init?</code>)
- (nonnull instancetype)initWithUrl:(NSURL * _Nonnull)url OBJC_DESIGNATED_INITIALIZER;
/// Hàm khởi tạo từ các thành phần riêng biệt
- (nonnull instancetype)initWithUrl:(NSURL * _Nonnull)url path:(NSString * _Nonnull)path host:(NSString * _Nullable)host parameters:(NSDictionary * _Nonnull)parameters OBJC_DESIGNATED_INITIALIZER;
/// Trả về mô tả của đối tượng
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
@end

@class NSURLResponse;

SWIFT_CLASS("_TtC20DynamicLinkFramework23DLDynamicLinkNetworking")
@interface DLDynamicLinkNetworking : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DLDynamicLinkNetworking * _Nonnull shared;)
+ (DLDynamicLinkNetworking * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (NSError * _Nullable)extractErrorForShortLinkWithUrl:(NSURL * _Nonnull)url data:(NSData * _Nullable)data response:(NSURLResponse * _Nullable)response error:(NSError * _Nullable)error SWIFT_WARN_UNUSED_RESULT;
/// Hàm xử lý shortlink (phân giải shortlink)
- (void)resolveShortLinkWithUrl:(NSURL * _Nullable)url completion:(void (^ _Nonnull)(NSURL * _Nullable, NSError * _Nullable))completion;
- (void)createShortURLFakeResponseFrom:(NSDictionary<NSString *, id> * _Nonnull)parameters completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (void)createShortURLFrom:(NSDictionary<NSString *, id> * _Nonnull)parameters completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
/// Hàm cập nhật thống kê số lần mở link (first open or reopen deeplink statistics)
- (void)updateDeepLinkAnalyticsWithUrl:(NSURL * _Nonnull)url count:(NSInteger)count firstOpen:(BOOL)firstOpen reopen:(BOOL)reopen completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20DynamicLinkFramework14DLDynamicLinks")
@interface DLDynamicLinks : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DLDynamicLinks * _Nonnull shared;)
+ (DLDynamicLinks * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init SWIFT_UNAVAILABLE;
+ (nonnull instancetype)new SWIFT_UNAVAILABLE_MSG("-init is unavailable");
- (void)configureDynamicLinks;
- (void)createShortURLFrom:(NSDictionary<NSString *, id> * _Nonnull)parameters completion:(void (^ _Nonnull)(NSData * _Nullable, NSError * _Nullable))completion;
- (DLDynamicLink * _Nullable)dynamicLinkFromCustomSchemeURL:(NSURL * _Nullable)url SWIFT_WARN_UNUSED_RESULT;
- (BOOL)handleUniversalLink:(NSURL * _Nullable)url completion:(void (^ _Nonnull)(DLDynamicLink * _Nullable, NSError * _Nullable))completion SWIFT_WARN_UNUSED_RESULT;
@end


SWIFT_CLASS("_TtC20DynamicLinkFramework10DLKeyValue")
@interface DLKeyValue : NSObject
@property (nonatomic, copy) NSString * _Nullable key;
@property (nonatomic, copy) NSString * _Nullable value;
+ (DLKeyValue * _Nonnull)key:(NSString * _Nonnull)key value:(NSString * _Nonnull)value SWIFT_WARN_UNUSED_RESULT;
@property (nonatomic, readonly, copy) NSString * _Nonnull description;
- (BOOL)isEqual:(id _Nullable)object SWIFT_WARN_UNUSED_RESULT;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum LogLevel : NSInteger;

/// DLLogger - Hỗ trợ log theo nhiều cấp độ, lưu log vào file nếu cần
SWIFT_CLASS("_TtC20DynamicLinkFramework8DLLogger")
@interface DLLogger : NSObject
/// Ghi log với đầy đủ thông tin
+ (void)log:(NSString * _Nonnull)message level:(enum LogLevel)level;
/// Xóa file log
+ (void)clearLogFile;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Cấu hình Logger
SWIFT_CLASS("_TtC20DynamicLinkFramework14DLLoggerConfig")
@interface DLLoggerConfig : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL isLoggingEnabled;)
+ (BOOL)isLoggingEnabled SWIFT_WARN_UNUSED_RESULT;
+ (void)setIsLoggingEnabled:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL shouldLogToFile;)
+ (BOOL)shouldLogToFile SWIFT_WARN_UNUSED_RESULT;
+ (void)setShouldLogToFile:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL shouldUseOSLog;)
+ (BOOL)shouldUseOSLog SWIFT_WARN_UNUSED_RESULT;
+ (void)setShouldUseOSLog:(BOOL)value;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class) BOOL shouldUseNSLog;)
+ (BOOL)shouldUseNSLog SWIFT_WARN_UNUSED_RESULT;
+ (void)setShouldUseNSLog:(BOOL)value;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

typedef SWIFT_ENUM(NSInteger, DLShortURLType, open) {
  DLShortURLTypeUnlimitedUse = 0,
  DLShortURLTypeOneTimeUse = 1,
};


/// A type that reads from and writes to an underlying storage container.
SWIFT_CLASS("_TtC20DynamicLinkFramework19DLUserDefaultHelper")
@interface DLUserDefaultHelper : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DLUserDefaultHelper * _Nonnull shared;)
+ (DLUserDefaultHelper * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
/// Lưu String vào UserDefaults
- (void)setString:(NSString * _Nonnull)value forKey:(NSString * _Nonnull)key;
/// Lấy String từ UserDefaults
- (NSString * _Nullable)getStringForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Lưu Integer vào UserDefaults
- (void)setInt:(NSInteger)value forKey:(NSString * _Nonnull)key;
/// Lấy Integer từ UserDefaults
- (NSInteger)getIntForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Lưu Bool vào UserDefaults
- (void)setBool:(BOOL)value forKey:(NSString * _Nonnull)key;
/// Lấy Bool từ UserDefaults
- (BOOL)getBoolForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Lưu Dictionary vào UserDefaults
- (void)setDictionary:(NSDictionary * _Nonnull)value forKey:(NSString * _Nonnull)key;
/// Lấy Dictionary từ UserDefaults
- (NSDictionary * _Nullable)getDictionaryForKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Xóa giá trị khỏi UserDefaults
- (void)removeForKey:(NSString * _Nonnull)key;
/// Kiểm tra xem một key có tồn tại hay không
- (BOOL)containsKey:(NSString * _Nonnull)key SWIFT_WARN_UNUSED_RESULT;
/// Xóa tất cả dữ liệu trong UserDefaults
- (void)removeAllKeys;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


SWIFT_CLASS("_TtC20DynamicLinkFramework11DLUtilities")
@interface DLUtilities : NSObject
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, readonly, strong) DLUtilities * _Nonnull shared;)
+ (DLUtilities * _Nonnull)shared SWIFT_WARN_UNUSED_RESULT;
SWIFT_CLASS_PROPERTY(@property (nonatomic, class, copy) NSSet<NSURL *> * _Nonnull DLCustomDomains;)
+ (NSSet<NSURL *> * _Nonnull)DLCustomDomains SWIFT_WARN_UNUSED_RESULT;
+ (void)setDLCustomDomains:(NSSet<NSURL *> * _Nonnull)value;
- (NSString * _Nonnull)urlQueryStringFromDictionary:(NSDictionary<NSString *, NSString *> * _Nonnull)dictionary SWIFT_WARN_UNUSED_RESULT;
- (NSDictionary<NSString *, NSString *> * _Nonnull)dictionaryFromQuery:(NSString * _Nullable)queryString SWIFT_WARN_UNUSED_RESULT;
/// Hàm này dùng để kiểm tra xem một URL có thuộc một trong các custom domain hợp lệ hay không.
/// Ngoài ra, nó còn kiểm tra xem URL có chứa đường dẫn hợp lệ hoặc tham số query “link” trỏ đến một URL khác.
/// Ví dụ:
/// Hợp lệ: “https://deeplink.algamestudio.com/game?id=2” || “https://sport.algamestudio.com/detail?id=2” || “https://deeplink.algamestudio.com/?link=https://example.com/page”
/// Không hợp lệ: “https://randomsite.com/game?id=2” (Không thuộc danh sách DLCustomDomains) || “https://deeplink.algamestudio.com/invalid” (Không có đường dẫn hợp lệ hoặc query “link”)
/// \param url Deeplink (Vd: https://deeplink.algamestudio.com)
///
///
/// returns:
/// True nếu hợp lệ hoặc false nếu không hợp lệ
- (BOOL)isURLForAllowedCustomDomain:(NSURL * _Nullable)url SWIFT_WARN_UNUSED_RESULT;
- (BOOL)isValidDLWithDomain:(NSURL * _Nullable)url SWIFT_WARN_UNUSED_RESULT;
- (BOOL)canParseUniversalLinkURL:(NSURL * _Nullable)url SWIFT_WARN_UNUSED_RESULT;
- (BOOL)matchesShortLinkFormat:(NSURL * _Nonnull)url SWIFT_WARN_UNUSED_RESULT;
- (void)addToAllowListForCustomDomainsArray:(NSArray<NSString *> * _Nonnull)customDomains;
/// Hàm kiểm tra first open hay reopen (điều kiện reopen là khi app được mở lại sau khi đã được đóng hoàn). Lưu key là urlString và số lần mở deeplink vào UserDefaults.
- (void)checkForDeepLinkAfterLaunch:(NSURL * _Nonnull)url;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

/// Các cấp độ log
typedef SWIFT_ENUM(NSInteger, LogLevel, open) {
  LogLevelDebug = 0,
  LogLevelInfo = 1,
  LogLevelWarning = 2,
  LogLevelError = 3,
};


#endif
#if __has_attribute(external_source_symbol)
# pragma clang attribute pop
#endif
#if defined(__cplusplus)
#endif
#pragma clang diagnostic pop
#endif

#else
#error unsupported Swift architecture
#endif
